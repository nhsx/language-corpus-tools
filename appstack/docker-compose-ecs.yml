version: '3.4'

x-aws-vpc: "${VPC}"

services:

#  nginx:
#    ports:
#        - "80:80"
#    environment:
#      DNS_RESOLVER: 169.254.169.253
#    deploy:
#      resources:
#        limits:
#          cpus: '0.25'
#          memory: 512M

  caddy:
    ports:
        - "80:80"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 512M

  doccano:
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 512M


  sqlpad:
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 512M

x-aws-cloudformation:
  Resources:
    CaddyTCP80Listener:
      Properties:
        DefaultActions:
        - RedirectConfig:
            Protocol: "HTTPS"
            Port: 443
            Host: "#{host}"
            Path: "/#{path}"
            Query: "#{query}"
            StatusCode: "HTTP_301"
          Type: redirect

    CaddyTCP443Listener:
      Properties:
        DefaultActions:
        - ForwardConfig:
            TargetGroups:
            - TargetGroupArn:
                Ref: CaddyTCP80TargetGroup
          Type: forward
        LoadBalancerArn:
          Ref: LoadBalancer
        Certificates:
          - CertificateArn: "${CERT_ARN}"
        Protocol: HTTPS
        Port: 443
      Type: AWS::ElasticLoadBalancingV2::Listener
      DependsOn:
        - CaddyTCP80Listener

    Default443Ingress:
      Properties:
        CidrIp: 0.0.0.0/0
        Description: 443 to nginx:80/tcp on default network
        FromPort: 443
        GroupId: "${AWS_SG}"
        IpProtocol: TCP
        ToPort: 443
      Type: AWS::EC2::SecurityGroupIngress

networks:
  default:
    external: true
    name: "${AWS_SG}"
